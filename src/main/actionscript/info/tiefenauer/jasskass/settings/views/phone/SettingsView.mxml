<?xml version="1.0" encoding="utf-8"?>
<base:SettingsViewBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:base="info.tiefenauer.jasskass.settings.views.base.*"
					   implements="info.tiefenauer.jasskass.settings.views.interfaces.ISettingsView"
					   xmlns:components="info.tiefenauer.jasskass.settings.views.components.*"
					   backButtonEnabled="false"
					   title="{translate('Einstellungen')}" 
					   >
	<fx:Script>
		<![CDATA[
			import info.tiefenauer.jasskass.app.util.translate;
			import info.tiefenauer.jasskass.settings.model.Setting;
			import info.tiefenauer.jasskass.settings.model.enum.SettingKey;
			import info.tiefenauer.jasskass.settings.model.interfaces.ISetting;
			
			private var settingsChanged:Boolean = false;
			
			protected function onSettingChanged(event:Event):void{
				setCurrentState('settingsChanged');
			}
			
			protected function onSaveButtonClick(event:MouseEvent):void{
				settings = new Vector.<ISetting>();
				settings.push(new Setting(SettingKey.AUTO_BERGPREIS, autoBergpreisSetting.selected));
				settings.push(new Setting(SettingKey.VIER_BAUERN, vierBauernSetting.selected));
				settings.push(new Setting(SettingKey.MATCH, matchSetting.value));
				settings.push(new Setting(SettingKey.KONTERMATCH, konterMatchSetting.value));
				settings.push(new Setting(SettingKey.BERGPREIS, bergpreisSetting.value));
				settings.push(new Setting(SettingKey.SIEG, siegSetting.value));
				settings.push(new Setting(SettingKey.STICHWERT, stichwertSetting.value));
				settings.push(new Setting(SettingKey.DIFF_FAKTOR, diffFaktorSetting.value));
				dispatchEvent(new Event(SAVE_SETTINGS_CLICKED));
				setCurrentState('default');
			}
			
			/**
			 * 
			 */
			override public function set settings(value:Vector.<ISetting>):void{
				super.settings = value;
				for each(var setting:ISetting in value) switch (setting.key) {
					case SettingKey.AUTO_BERGPREIS:
						autoBergpreisSetting.selected = setting.value == true;
						break;
					case SettingKey.VIER_BAUERN:
						vierBauernSetting.selected = setting.value == true;
						break;
					case SettingKey.MATCH:
						matchSetting.value = setting.value;
						break;
					case SettingKey.KONTERMATCH:
						konterMatchSetting.value = setting.value;
						break;
					case SettingKey.BERGPREIS:
						bergpreisSetting.value = setting.value;
						break;
					case SettingKey.SIEG:
						siegSetting.value = setting.value;
						break;
					case SettingKey.STICHWERT:
						stichwertSetting.value = setting.value;
						break;
					case SettingKey.DIFF_FAKTOR:
						diffFaktorSetting.value = setting.value;
						break;
				};
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:MultiDPIBitmapSource id="infoIcon"
								source120dpi="@Embed('/assets/dpi120/ico_info.png')"
								source160dpi="@Embed('/assets/dpi160/ico_info.png')"
								source240dpi="@Embed('/assets/dpi240/ico_info.png')"
								source320dpi="@Embed('/assets/dpi320/ico_info.png')"
								source480dpi="@Embed('/assets/dpi480/ico_info.png')"
								source640dpi="@Embed('/assets/dpi640/ico_info.png')"
								/>
	</fx:Declarations>
	
	<base:states>
		<s:State name="default" />
		<s:State name="settingsChanged" />
	</base:states>
	
	<base:actionContent>
		<s:Button label="{translate('Speichern')}"
				  click="onSaveButtonClick(event)"
				  includeIn="settingsChanged"
				  />
	</base:actionContent>
	
	<s:Scroller width="100%" height="100%">
		<s:VGroup paddingLeft="10" paddingRight="10" paddingTop="20" paddingBottom="20">

			<components:TitleLabel text="{translate('Generelles')}" width="100%"/>
			
			<components:SettingDisplay label="{translate('Auto-Bergpreis')}"
									   toolTip="{translate('Automatisches Anmelden des Bergpreis')}"
									   icon="{infoIcon}" 
									   width="100%" 
									   settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:ToggleSwitch right="0" id="autoBergpreisSetting"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:TitleLabel text="{translate('Striche')}" width="100%"/>
			
			<components:SettingDisplay label="{translate('4 Bauern')}"
									   toolTip="{translate('Strich für 4 Bauern')}"
									   icon="{infoIcon}" 
									   width="100%" 
									   settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:ToggleSwitch right="0" id="vierBauernSetting"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:SettingDisplay label="{translate('Match')}"
									   toolTip="{translate('Anzahl Striche für einen Match')}"
									   icon="{infoIcon}" 
									   width="100%" 
									   settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:NumericStepper id="matchSetting" minimum="1" skinClass="info.tiefenauer.jasskass.skins.numericStepper.MobileNumStepSkin"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:SettingDisplay label="{translate('Kontermatch')}"
									   toolTip="{translate('Anzahl Striche für einen Kontermatch')}"
									   icon="{infoIcon}" 
									   width="100%" 
									   settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:NumericStepper id="konterMatchSetting" minimum="1" skinClass="info.tiefenauer.jasskass.skins.numericStepper.MobileNumStepSkin"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:SettingDisplay label="{translate('Bergpreis')}"
									   toolTip="{translate('Anzahl Striche für den Bergpreis')}"
									   icon="{infoIcon}" 
									   width="100%" 
									   settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:NumericStepper id="bergpreisSetting" minimum="1" skinClass="info.tiefenauer.jasskass.skins.numericStepper.MobileNumStepSkin"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:SettingDisplay label="{translate('Sieg')}"
									   toolTip="{translate('Anzahl Striche für den Sieg')}"
									   icon="{infoIcon}" 
									   width="100%" settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:NumericStepper id="siegSetting" minimum="1" skinClass="info.tiefenauer.jasskass.skins.numericStepper.MobileNumStepSkin"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:TitleLabel text="{translate('Berechnung JassKass')}" width="100%"/>
			
			<components:SettingDisplay label="{translate('Strichwert')}"
									   toolTip="{translate('Betrag in Franken für einen Strich')}"
									   icon="{infoIcon}" width="100%" 
									   settingChanged="onSettingChanged(event)"
									   >
				<components:valueDisplay>
					<s:NumericStepper id="stichwertSetting" minimum="1" skinClass="info.tiefenauer.jasskass.skins.numericStepper.MobileNumStepSkin"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
			<components:SettingDisplay label="{translate('Differenzfaktor')}"
									   toolTip="{translate('Zusätzlicher Frankenbetrag für das Verliererteam')}"
									   icon="{infoIcon}" 
									   width="100%" 
									   settingChanged="onSettingChanged(event)">
				<components:valueDisplay>
					<s:NumericStepper id="diffFaktorSetting" minimum="1" skinClass="info.tiefenauer.jasskass.skins.numericStepper.MobileNumStepSkin"/>
				</components:valueDisplay>
			</components:SettingDisplay>
			
		</s:VGroup>
	</s:Scroller>
	
	
</base:SettingsViewBase>
