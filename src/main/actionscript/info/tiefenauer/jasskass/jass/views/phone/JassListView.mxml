<?xml version="1.0" encoding="utf-8"?>
<base:JassListViewBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:base="info.tiefenauer.jasskass.jass.views.base.*"
					   implements="info.tiefenauer.jasskass.jass.views.interfaces.IJassListView"
					   creationComplete="onCreationComplete(event)"
					   backButtonEnabled="false"
					   >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			import info.tiefenauer.jasskass.app.util.translate;
			import info.tiefenauer.jasskass.profile.model.interfaces.IJassGroup;
			protected function onNewJassBtnClick(event:MouseEvent):void{
				dispatchEvent(new Event(NEW_JASS_BUTTON_CLICKED));
			}
			
			protected function onJassListSelectionChange(event:IndexChangeEvent):void{
				dispatchEvent(new Event(JASS_SELECTED));
			}
			
			//------------------
			// Getter/Setter
			//------------------
			public function get jasses():List{
				return jassList;
			}
			public function set jassGroup(value:IJassGroup):void{
				if (value){
					setCurrentState('default');
				}
				else {
					setCurrentState('noJassGroup');
				}
			}
			public function get filterSelection():ButtonBar{
				return sortButtonBar;
			}
			public function get groupKey():String{
				return codeTI.text;
			}
			//------------------
			// Event handlers
			//------------------
			protected function onCreationComplete(event:FlexEvent):void{
				sortButtonBar.dataProvider = new ArrayCollection([translate('Datum aufsteigend'), translate('Datum absteigend')]);
				sortButtonBar.selectedIndex = 0;
			}
			protected function onButtonBarSelectionChanged(event:IndexChangeEvent):void{
				dispatchEvent(new Event(FILTER_SELECTED));
			}
			protected function onJoinGroupButtonClicked(event:MouseEvent):void{
				dispatchEvent(new Event(JOIN_GROUP_BUTTON_CLICKED));
			}
			protected function onRefreshButtonClick(event:MouseEvent):void{
				dispatchEvent(new Event(REFRESH_BUTTON_CLICKED));
			}
			protected function onCodeEntered(event:TextEvent):void{
				joinGroupButton.enabled = codeTI.text.length > 0;
			}
			
		]]>
	</fx:Script>
	
	<base:states>
		<s:State name="default" />
		<s:State name="noJassGroup" />
	</base:states>
	
	<base:navigationContent>
		<s:Button id="refreshButton"
				  label="Refresh"
				  click="onRefreshButtonClick(event)"
				  />
	</base:navigationContent>
	
	<base:actionContent>
		<s:Button id="newJassBtn"
				  label.default="{translate('Neuer Jass')}"
				  label.noJassGroup="{translate('Ad-hoc Jass')}"
				  click="onNewJassBtnClick(event)"
				  width="100%"
				  />
	</base:actionContent>
	
	<s:VGroup width="100%" height="100%" includeIn="default">
		<s:ButtonBar id="sortButtonBar"
					 change="onButtonBarSelectionChanged(event)"
					 requireSelection="true"
					 selectedIndex="0"
					 width="100%"
					 />
		
		<!-- list to display jasses -->
		<s:List id="jassList"
				dataProvider="{jassListDataProvider}"
				itemRenderer="info.tiefenauer.jasskass.jass.views.components.JassItemRenderer"
				change="onJassListSelectionChange(event)"
				width="100%"
				height="100%"
				>
		</s:List>
	</s:VGroup>
	
	<s:VGroup paddingLeft="20" paddingRight="20" paddingTop="20" paddingBottom="20" width="100%" height="100%" includeIn="noJassGroup">
		<s:Label text="{translate('Du musst einer Jassgruppe beitreten, um die Jasse anzeigen zu kÃ¶nnen')}" textAlign="center" width="100%"/>
		<s:TextInput id="codeTI" textInput="onCodeEntered(event)" prompt="{translate('Code')}" width="100%" />
		<s:Button id="joinGroupButton" label="{translate('Gruppe beitreten')}" width="100%" click="onJoinGroupButtonClicked(event)"/>
	</s:VGroup>

	
</base:JassListViewBase>
