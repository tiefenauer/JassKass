<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		initialize="onInitialize(event)" xmlns:ns="http://flex.apache.org/experimental/ns"
		>
	
	<fx:Style>
		.progressPopupTitle, .progressPopupMessage
		{
			color: #FFFFFF;
			textAlign: center;
		}
		.progressPopupTitle
		{
			fontWeight: bold;
		}
		#progressBar
		{
			skinClass: ClassReference("com.clx.uicomponents.skins.DefaultProgressBarSkin");
		}
		
		.currentProgressLabel
		{
			color: #FFFFFF;
			fontSize: 15;
			textAlign: left;
		}
		.totalProgressLabel
		{
			color: #FFFFFF;
			fontSize: 15;
			textAlign: right;
		}
		
	</fx:Style>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clx.uicomponents.popup.ProgressPopup")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.core.DPIClassification;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			[Bindable] private var padding20:Number = 20;

			protected function onInitialize(event:FlexEvent):void{
				switch(FlexGlobals.topLevelApplication.applicationDPI){
					case DPIClassification.DPI_160:
						padding20 = 20;
						break;
					case DPIClassification.DPI_240:
						padding20 = 30;
						break;
					case DPIClassification.DPI_320:
						padding20 = 40;
						break;
					case DPIClassification.DPI_480:
						padding20 = 60;
						break;
				}
			}
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="closed" />
		<s:State name="disabled" />
		<s:State name="normal" />
	</s:states>
	
	<!-- SkinParts
	name=contentGroup, type=spark.components.Group, required=false
	name=progressBar, type=spark.components.ProgressBar, required=true
	name=cancelButton, type=spark.components.Button, required=true
	name=messageDisplay, type=spark.core.IDisplayText, required=false
	name=titleDisplay, type=spark.core.IDisplayText, required=false
	-->
	
	<!-- Background and Stroke -->
	<s:Rect width="100%" height="100%" top="0" left="0" right="0" bottom="0" radiusX="10">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#515151" alpha="0.9"/>
				<s:GradientEntry color="#000101" alpha="0.9"/>
			</s:LinearGradient>
		</s:fill>
		<s:stroke>
			<s:LinearGradientStroke rotation="90">
				<s:GradientEntry color="#bebebe"/>
				<s:GradientEntry color="#000101" ratio="0.1"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	
	<!-- Title, message and progress bar -->
	<s:VGroup width="100%"
			  paddingLeft="{padding20}"
			  paddingRight="{padding20}"
			  paddingTop="{padding20}"
			  paddingBottom="{padding20}"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  >
		<s:Label id="titleDisplay"
				 styleName="progressPopupTitle"
				 includeInLayout="{hostComponent.title.length > 0}"
				 visible="{hostComponent.title.length > 0}"
				 width="100%"
				 />
		
		<s:Label id="messageDisplay"
				 styleName="progressPopupMessage"
				 includeInLayout="{hostComponent.message.length > 0}"
				 visible="{hostComponent.message.length > 0}"
				 width="100%"
				 />
		
		<ns:ProgressBar id="progressBar"
						displayPercents="true"
						currentProgress="0"
						width="100%"
						/>
		
		<s:HGroup width="100%" height="40">
			<s:Label id="currentProgressLabel" 
					 styleName="currentProgressLabel"
					 includeInLayout="{hostComponent.currentProgress.length > 0}"
					 visible="{hostComponent.currentProgress.length > 0}"
					 width="50%" 
					 />
			<s:Label id="totalProgressLabel" 
					 styleName="totalProgressLabel"
					 includeInLayout="{hostComponent.totalProgress.length > 0}"
					 visible="{hostComponent.totalProgress.length > 0}"
					 width="50%" 
					 />
		</s:HGroup>
		
		<s:Button id="cancelButton"
				  label="{hostComponent.cancelButtonLabel}"
				  width="100%"
				  />
		
	</s:VGroup>
</s:Skin>
