<?xml version="1.0" encoding="utf-8"?>
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   minWidth="21" minHeight="21" 
				   alpha.disabled="0.5"
				   creationComplete="onCreationComplete(event)"
				   >
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		[HostComponent("spark.components.ButtonBarButton")]
		]]>
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import spark.components.ButtonBarButton;
			private function onCreationComplete(event:Event):void{
				var button:ButtonBarButton = hostComponent as ButtonBarButton;
				if (button.data.hasOwnProperty('enabled'))
					hostComponent.enabled = button.data.enabled;
			}
		]]>
	</fx:Script>
	
		<fx:Script fb:purpose="styling">
		
		/* Define the skin elements that should not be colorized. 
		For toggle button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = ["labelDisplay", "fill", "selectionHighlight"];
		
		/** 
		 * @private
		 */     
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
		
		/**
		 * @private
		 */
		override protected function updateDisplayList(unscaledWidth:Number, unscaleHeight:Number):void
		{
			var cr:Number = getStyle("cornerRadius");
			
			if (cornerRadius != cr)
			{
				cornerRadius = cr;
				fill.topLeftRadiusX = cornerRadius;
				fill.bottomLeftRadiusX = cornerRadius;
			}
			
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
		
		private var cornerRadius:Number = 2;
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>
	
	<s:Rect id="fill" left="0" right="0" top="0" bottom="1">
		<s:fill>
			<s:SolidColor color="0x003366" />
		</s:fill>
	</s:Rect>
	
	<s:Rect id="selectionHighlight" left="0" right="0" bottom="1" height="10" includeIn="selectedStates">
		<s:fill>
			<s:SolidColor color="#CCCC00" />
		</s:fill>
	</s:Rect>
		
	<s:Label id="labelDisplay"
			 color="0xFFFFFF"
			 textAlign="center"
			 fontWeight="normal"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 horizontalCenter="0" verticalCenter="1"
			 left="10" right="10" top="2" bottom="2">
	</s:Label>
	
</s:SparkButtonSkin>